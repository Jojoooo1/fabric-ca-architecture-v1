version: "2"

networks:
  basic:

services:
  ca.shipper.logistic:
    container_name: ca.shipper.logistic
    image: hyperledger/fabric-ca:$IMAGE_TAG
    restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.shipper.logistic
      # - FABRIC_CA_SERVER_REGISTRY_MAXENROLLMENTS=1 # only allow to register one admin
      ### SERVER_CA certificates: Creates config folder###
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca/ca.shipper.logistic-cert.pem # default $HOME/ca-key.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/ca/${CA0_PRIVATE_KEY} # default $HOME/ca-cert.pem
      ### SERVER_TLS certificate ###
      - FABRIC_CA_SERVER_TLS_ENABLED=$CA_TLS_ENABLED # Creates folder in msp: cacerts/signcerts/user
      # - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-tls/cert.pem # default generated in $HOME/tls-cert.pem
      # - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-tls/key.pem # default generated in $HOME/msp/keystore
      # - FABRIC_CA_SERVER_TLS_CLIENTAUTH_TYPE=
      # - FABRIC_CA_SERVER_TLS_CLIENTAUTH_CERTFILES=

    ports:
      - 7054:7054
    # -b :bootstrap identity is required to start the Fabric CA server; this identity is the server administrator. It creates folders in $HOME/msp
    # use default config, to use another one:  -c /etc/hyperledger/fabric-ca-server-config/fabric-ca-server-config.yaml
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      # - ./fabric-ca-server:/etc/hyperledger/
      - ./crypto-config/peerOrganizations/shipper.logistic/ca/:/etc/hyperledger/fabric-ca-server-config/ca
      # - ${PWD}/ca-server-config/fabric-ca-server-config.yaml:/etc/hyperledger/fabric-ca-server-config/fabric-ca-server-config.yaml
    networks:
      - basic
  # ca.transporter.logistic:
  #   container_name: ca.transporter.logistic
  #   image: hyperledger/fabric-ca:$IMAGE_TAG
  #   restart: always
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca.transporter.logistic
  #     - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.transporter.logistic-cert.pem
  #     - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${CA1_PRIVATE_KEY}
  #   ports:
  #     - 8054:7054
  #   command: sh -c 'fabric-ca-server start -b admin:adminpw'
  #   volumes:
  #     - ./crypto-config/peerOrganizations/transporter.logistic/ca/:/etc/hyperledger/fabric-ca-server-config
  #   networks:
  #     - basic
  # ca.insurance.logistic:
  #   container_name: ca.insurance.logistic
  #   image: hyperledger/fabric-ca:$IMAGE_TAG
  #   restart: always
  #   environment:
  #     - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
  #     - FABRIC_CA_SERVER_CA_NAME=ca.insurance.logistic
  #     - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.insurance.logistic-cert.pem
  #     - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${CA2_PRIVATE_KEY}
  #   ports:
  #     - 9054:7054
  #   command: sh -c 'fabric-ca-server start -b admin:adminpw'
  #   volumes:
  #     - ./crypto-config/peerOrganizations/insurance.logistic/ca/:/etc/hyperledger/fabric-ca-server-config
  #   networks:
  #     - basic
